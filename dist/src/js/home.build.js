(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/ryanstumbaugh/Development/repos/terpsearch/src/js/home.js":[function(require,module,exports){
var EmailBox = React.createClass({displayName: "EmailBox",
	getInitialState: function() {
		return {
			email: '',
			message: '',
			slideClass: 'message-wrap slide closed',
			test: 'red'
		}
	},
	handleChange: function(e) {
		this.setState({
			email: e.target.value,
			message: '',
			slideClass: 'slide closed'
		});
	},
	handleSubmit: function() {
		
		if (this.state.email == '') {
			this.setState({
				message: 'Enter a valid email.',
				slideClass: 'slide open'
			})
		} else {
			this.setState({
				email: '',
				message: 'Thanks!',
				slideClass: 'slide open'
			})
		}
		
	},
	render: function() {
		return (
			React.createElement("div", null, 
				React.createElement("div", {className: "input-group"}, 
					React.createElement("input", {type: "text", 
						   className: "form-control", 
						   placeholder: "me@example.com", 
						   value: this.state.email, 
						   onChange: this.handleChange}
					), 
		            React.createElement("span", {className: "input-group-btn"}, 
		            	React.createElement("button", {className: "btn btn-default", id: "btnEmail", onClick: this.handleSubmit}, "Go!")
		        	)
		        ), 
		        React.createElement("br", null), 
	            React.createElement("div", {className: 'message-wrap '+this.state.slideClass}, 
	            	this.state.message
	            )
	        )
		)
	}
});

var Feedback = React.createClass({displayName: "Feedback",
	getInitialState: function() {
		return {
			feedback: '',
			message: '',
			slideClass: 'slide closed'
		}
	},
	handleChange: function(e) {
		this.setState({
			feedback: e.target.value
		})
	},
	handleSubmit: function() {
		console.log(this.state.feedback);
		this.setState({
			feedback: '',
			message: 'Thanks!',
			slideClass: 'slide open'
		})
	},
	render: function() {
		return (
			React.createElement("div", null, 
				React.createElement("div", {className: "form-group col-sm-12"}, 
	                React.createElement("textarea", {
	                	id: "txtFeedback", 
	                	cols: "30", rows: "6", 
	                	placeholder: "Leave a comment here...", 
	                	className: "form-control", 
	                	value: this.state.feedback, 
	                	onChange: this.handleChange}
	                	)
	            ), 
	            React.createElement("div", {className: "form-group"}, 
	                React.createElement("div", {className: "button-wrap col-xs-2"}, 
	                    React.createElement("button", {className: "btn btn-primary", onClick: this.handleSubmit}, "Submit")
	                ), 
	                
	                React.createElement("div", {className: 'message-wrap col-xs-10 ' + this.state.slideClass}, 
	                    this.state.message
	                )
	            )
	        )
		)
	}
})

React.render(React.createElement(EmailBox, null), document.getElementById('email'));
React.render(React.createElement(Feedback, null), document.getElementById('feedback'));

},{}]},{},["/Users/ryanstumbaugh/Development/repos/terpsearch/src/js/home.js"])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
